{"componentChunkName":"component---src-templates-blog-post-js","path":"/yarn-berry에서의-eslint-import-rule-관련이슈/","result":{"data":{"site":{"siteMetadata":{"title":"read0more's blog"}},"markdownRemark":{"id":"4e2447fc-da8a-5c92-bc6d-d1355816b2a7","excerpt":"발단 프로젝트 스캐폴딩용으로 github에 생성한 템플릿 repo에서 vitest관련 import에서 다음과 같은 에러가 발생했다. 원인이 되는 부분은 해당 import import { defineConfig } from 'vitest/config'; 였다.\nvitest/config…","html":"<h1>발단</h1>\n<p>프로젝트 스캐폴딩용으로 github에 생성한 템플릿 repo에서 vitest관련 import에서 다음과 같은 에러가 발생했다.</p>\n<pre><code>  1:1  error  Resolve error: synckit tried to access \", but it isn't declared in its dependencies; this makes the require call ambiguous and unsound.\n\nRequired package: \" (via \"\"/var/folders/1s/2hvl19cn5p1bnb1x26th1m9m0000gn/T/473e5d87de9575172344d889c511233f.cjs\"\")\nRequired by: synckit@npm:0.8.5 (via /Users/yk/Documents/project/my-next-template/.yarn/cache/synckit-npm-0.8.5-40a594eb38-8a9560e5d8.zip/node_modules/synckit/lib/)\n</code></pre>\n<p>원인이 되는 부분은 해당 import <code>import { defineConfig } from 'vitest/config';</code> 였다.\nvitest/config에서 가져오지 않고 vite에서 가져와도 별 상관은 없지만 어째서 PnP 환경에서만 발생하는지 찾아보았다.</p>\n<h1>원인(예상)</h1>\n<ul>\n<li>에러가 난 곳을 보니 synckit이라는 패키지에서 모듈명을 제대로 받지 못하는것으로 보인다.</li>\n<li>거슬러 올라가 보니 해당 synckit은 eslint-import-resolver-typescript에서 사용한다. 여기서 제대로 된 값을 전달하지 못해 에러 문구도 와 같이 빈 문자열에 access하려다 실패한 것으로 보인다.</li>\n</ul>\n<h1>해결방법</h1>\n<p>위의 예상 원인으로 module resolution이 문제가 아닐까 했고, 해결 방법 자체는 간단하다. eslint 설정 파일에 다음 내용을 추가하면 된다.</p>\n<pre><code>settings: {\n    'import/resolver': 'node',\n  },\n</code></pre>\n<p>module resolution의 node 방식에 대한 자세한 설명은 <a href=\"https://www.typescriptlang.org/docs/handbook/module-resolution.html#how-nodejs-resolves-modules\">여기</a>에서 보는 것이 더 빠르다.</p>\n<h1>기타</h1>\n<p>아무래도 tsconfig의 paths를 통한 alias도 해당 설정을 해주면 eslint 에서 오류가 발생하였다. 하지만 어차피 Yarn 2+를 사용하는 이상 link 프로토콜을 쓰는게 여러모로 편하니(alias를 jest, tsconfig, storybook에 전부 따로따로 설정해야 한다던가의 이유로) 이 부분은 크게 신경쓰지 않아도 될 것으로 보인다.</p>","frontmatter":{"title":"yarn PnP에서의 eslint import rule 관련이슈","date":"April 23, 2023","description":"module resolution으로 인한 오류와 설정 방법"}},"previous":{"fields":{"slug":"/yarnPnP에서-prisma-사용하기/"},"frontmatter":{"title":"yarnPnP 환경에서 prisma-client 사용하기"}},"next":null},"pageContext":{"id":"4e2447fc-da8a-5c92-bc6d-d1355816b2a7","previousPostId":"0a127351-59a0-523b-811c-52d0a9a6fb34","nextPostId":null}},"staticQueryHashes":["2630815655","2841359383"],"slicesMap":{}}