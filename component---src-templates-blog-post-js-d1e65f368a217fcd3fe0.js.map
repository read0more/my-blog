{"version":3,"file":"component---src-templates-blog-post-js-d1e65f368a217fcd3fe0.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          description\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      /> */}\n      {author?.name && (\n        <p>\n          <strong>{author?.summary || null}</strong>\n          <p>{data.site.siteMetadata.description}</p>\n          {/* <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a> */}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","summary","description","_ref","location","title","children","isRootPath","pathname","header","Link","to","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","metaDescription","defaultTitle","content","property","twitter","Head","_ref2","markdownRemark","post","Seo","frontmatter","excerpt","previous","next","siteTitle","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}