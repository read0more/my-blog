{"version":3,"file":"component---src-pages-index-js-151f7be2cb8264ed3323.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          description\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      /> */}\n      {author?.name && (\n        <p>\n          <strong>{author?.summary || null}</strong>\n          <p>{data.site.siteMetadata.description}</p>\n          {/* <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a> */}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","summary","description","_ref","location","title","children","isRootPath","pathname","header","Link","to","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","metaDescription","defaultTitle","content","property","twitter","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head","Seo"],"sourceRoot":""}